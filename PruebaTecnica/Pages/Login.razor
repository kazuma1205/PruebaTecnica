@page "/login"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS

<h3>Login</h3>

<div>
    <label>Username:</label>
    <input @bind="Username" />
</div>
<div>
    <label>Password:</label>
    <input type="password" @bind="Password" />
</div>
<div>
    <button @onclick="HandleLogin">Login</button>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }

    private async Task HandleLogin()
    {
        var loginModel = new LoginModel { Username = Username, Password = Password };
        var isConnected = await CheckConnection(); /

        if (isConnected)
        {
            var response = await Http.PostAsJsonAsync("api/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var token = await response.Content.ReadFromJsonAsync<TokenResponse>();
                await SaveToken(token.Token);
                Navigation.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("Login failed");
            }
        }
        else
        {
            Console.WriteLine("Connection not ready, retrying...");
            await Task.Delay(1000); 
            await HandleLogin(); 
        }
    }

    private async Task<bool> CheckConnection()
    {
    
        return true; 
    }


    private async Task SaveToken(string token)
    {
        await JS.InvokeVoidAsync("localStorage.setItem", "authToken", token);
    }

    private async Task<string> GetToken()
    {
        return await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class TokenResponse
    {
        public string Token { get; set; }
    }
}

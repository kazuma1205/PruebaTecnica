@page "/"
@using Microsoft.AspNetCore.Authorization
@using PruebaTecnica.Servicios
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Home</PageTitle>

<h1>Bienvenido a la Aplicación</h1>
<a class="btn btn-primary" @onclick=Logout>cerrar sesion</a>

@code {

    protected override async Task OnInitializedAsync()
    {
      
        try
        {
            var token = await LocalStorage.GetItemAsync<string>("authToken");
            if (string.IsNullOrEmpty(token))
            {
                Navigation.NavigateTo("/login");
            }
    
    
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error durante la redirección: {ex.Message}");
        }
    }
    private async Task Logout()
    {
        // Eliminar el token del localStorage
        await LocalStorage.RemoveItemAsync("authToken");

        // Actualizar el estado de autenticación
        var authStateProvider = (AuthState)AuthenticationStateProvider;
        authStateProvider.MarkUserAsLoggedOut();

        // Redirigir al login
        Navigation.NavigateTo("/login");
    }


}

@page "/weather"
@using Microsoft.EntityFrameworkCore
@using PruebaTecnica.Data
@using PruebaTecnica.Models
@inject AplicacionDbContext _dbContext
@inject NavigationManager navegate

<h3>Lista de Cursos</h3>

@if (usuarios == null)
{
    <p>Cargando Cursos...</p>
}
else if (!usuarios.Any())
{
    <p>No hay Cursos disponibles.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Título</th>
                <th>Descripción</th>
                <th>Instructor</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var curso in cursos)
            {
                <tr>
                    <td>@curso.Nombre</td>
                    <td>@curso.Descripcion</td>
                    <td>@curso.Instructor</td>
                    <td>
                        <a href="/cursos-detail/@curso.CursoID" class="btn btn-primary">Ver Detalles</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @code {
    private List<Usuarios> usuarios;
    private List<CursosDto> cursos;
    public int UsuarioId = 2;

    protected override async Task OnInitializedAsync()
    {
        cursos = await _dbContext.Inscripciones
            .Where(i => i.UsuarioID == UsuarioId)
            .Join(_dbContext.Cursos,
                i => i.CursoID,
                c => c.CursoID,
                (i, c) => new { i, c })
            .Join(_dbContext.Usuarios,
                ic => ic.i.UsuarioID,
                u => u.UsuarioID,
                (ic, u) => new CursosDto
                    {
                        CursoID = ic.i.CursoID,
                        Nombre = ic.c.Nombre,
                        Descripcion = ic.c.Descripcion,
                        Instructor = u.Nombre
                    })
            .ToListAsync();
        usuarios = await _dbContext.Usuarios.ToListAsync();
    }

    private void DetailsCurso(int curso)
    {
        navegate.NavigateTo($"/cursos-detail/{curso.ToString()}");
    }
}
}